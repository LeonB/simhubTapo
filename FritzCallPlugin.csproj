<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Framework & project basics -->
    <TargetFramework>net472</TargetFramework>
    <OutputType>Library</OutputType>
    <UseWPF>true</UseWPF> <!-- needed because the project includes a XAML control -->

    <!-- Optional: set names as you prefer -->
    <AssemblyName>Argo.FritzCall</AssemblyName>
    <RootNamespace>Argo.FritzCall</RootNamespace>

    <!-- Common defaults similar to old project -->
    <Platforms>AnyCPU</Platforms>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <!-- Debug configuration -->
  <PropertyGroup Condition="'$(Configuration)'=='Debug'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <Optimize>false</Optimize>
    <DebugType>portable</DebugType>
  </PropertyGroup>

  <!-- Release configuration -->
  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DefineConstants>TRACE</DefineConstants>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <OutputPath>bin\Release\</OutputPath>
  </PropertyGroup>

  <!-- Project/assembly references that were in the old csproj -->
  <ItemGroup>
    <Reference Include="GameReaderCommon">
      <HintPath>..\..\..\SimHub\GameReaderCommon.dll</HintPath>
      <Private>False</Private> <!-- don’t copy local -->
    </Reference>

    <Reference Include="InputManager">
      <HintPath>..\..\InputManager.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <Reference Include="log4net">
      <HintPath>..\..\log4net.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <Reference Include="MahApps.Metro">
      <HintPath>..\..\..\..\..\..\..\..\..\Program Files (x86)\SimHub\MahApps.Metro.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <Reference Include="SimHub.Logging">
      <HintPath>..\..\SimHub.Logging.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <Reference Include="SimHub.Plugins">
      <HintPath>..\..\..\SimHub\SimHub.Plugins.dll</HintPath>
      <Private>False</Private>
    </Reference>

    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xaml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
    <Reference Include="WindowsBase" />
  </ItemGroup>

   <ItemGroup>
    <Page Include="Properties\DesignTimeResources.xaml" Condition="'$(DesignTime)'=='true' OR ('$(SolutionPath)'!='' AND Exists('$(SolutionPath)') AND '$(BuildingInsideVisualStudio)'!='true' AND '$(BuildingInsideExpressionBlend)'!='true')">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
      <ContainsDesignTimeResources>true</ContainsDesignTimeResources>
    </Page>
    <Page Include="SettingsControl.xaml">
      <SubType>Designer</SubType>
      <Generator>MSBuild:Compile</Generator>
    </Page>
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />

  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->

  <!-- If there are any code-generated/embedded resources you had to include manually before,
       add them here. SDK-style usually auto-includes .cs/.xaml files. -->

</Project>